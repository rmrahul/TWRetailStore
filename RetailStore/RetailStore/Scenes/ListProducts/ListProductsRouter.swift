//
//  ListProductsRouter.swift
//  RetailStore
//
//  Created by Rahul Mane on 21/07/18.
//  Copyright (c) 2018 developer. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListProductsRoutingLogic{
    func routeToShowProduct(indexPath : IndexPath)
}

protocol ListProductsDataPassing{
    var dataStore: ListProductsDataStore? { get }
}

class ListProductsRouter: NSObject, ListProductsRoutingLogic, ListProductsDataPassing{
    weak var viewController: ListProductsViewController?
    var dataStore: ListProductsDataStore?
    
    // MARK: Routing
    func routeToShowProduct(indexPath : IndexPath){
        let storyboard = UIStoryboard(name: "Main", bundle: nil)
        let destinationVC = storyboard.instantiateViewController(withIdentifier: "ShowProductViewController") as! ShowProductViewController
        var destinationDS = destinationVC.router!.dataStore!
        passDataToShowProduct(source: dataStore!, destination: &destinationDS,selectedIndex:indexPath)
        navigateToShowProduct(source: viewController!, destination: destinationVC)
    }
    
    // MARK: Navigation
    private func navigateToShowProduct(source: ListProductsViewController, destination: ShowProductViewController){
        source.show(destination, sender: nil)
    }
    
    // MARK: Passing data
    private func passDataToShowProduct(source: ListProductsDataStore, destination: inout ShowProductDataStore,selectedIndex : IndexPath){
        guard let productsPerCategory = source.products else {return}
        let products = productsPerCategory[Array(productsPerCategory.keys)[selectedIndex.section]]
        destination.product = products?[selectedIndex.row]
        destination.usedBy = .productList
    }
}
